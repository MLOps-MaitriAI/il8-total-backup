version: '3.8'
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - my-network

  backend:
    build:
      context: ./backend/app
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: mysql+pymysql://root:password@db:3306/lms_db
      SECRET_KEY: your_secret_value
      GOOGLE_CLIENT_ID: your_google_client_id
      GOOGLE_CLIENT_SECRET: your_google_client_secret
      ALGORITHM: HS256
    command: sh -c "python wait_for_db.py && uvicorn main:app --host 0.0.0.0 --port 8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/app/static/uploads:/app/static/uploads
    networks:
      - my-network

  db:
    image: mariadb:10.5
    environment:
      MYSQL_ROOT_PASSWORD: Maitri*5051#
      MYSQL_DATABASE: lms_db
      MYSQL_ROOT_HOST: '%'
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./my.cnf:/etc/mysql/my.cnf
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
  nginx:
    build:
      context: ./backend/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - backend
    networks:
      - my-network

  certbot:
    image: certbot/certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt

networks:
  my-network:
    driver: bridge

volumes:
  db_data: 
    driver: local


